Elm.Collision = Elm.Collision || {};
Elm.Collision.make = function (_elm) {
   "use strict";
   _elm.Collision = _elm.Collision || {};
   if (_elm.Collision.values)
   return _elm.Collision.values;
   var _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _E = _N.Error.make(_elm),
   $moduleName = "Collision";
   var Basics = Elm.Basics.make(_elm);
   var Color = Elm.Color.make(_elm);
   var Graphics = Graphics || {};
   Graphics.Collage = Elm.Graphics.Collage.make(_elm);
   var Graphics = Graphics || {};
   Graphics.Element = Elm.Graphics.Element.make(_elm);
   var List = Elm.List.make(_elm);
   var Maybe = Elm.Maybe.make(_elm);
   var Native = Native || {};
   Native.Json = Elm.Native.Json.make(_elm);
   var Native = Native || {};
   Native.Ports = Elm.Native.Ports.make(_elm);
   var Random = Elm.Random.make(_elm);
   var Signal = Elm.Signal.make(_elm);
   var String = Elm.String.make(_elm);
   var Text = Elm.Text.make(_elm);
   var Time = Elm.Time.make(_elm);
   var _op = {};
   var touching = F2(function (a,
   b) {
      return _U.cmp(Math.pow(a.x - b.x,
      2) + Math.pow(a.y - b.y,2),
      Math.pow(a.r + b.r,2)) < 1;
   });
   var moveXY = F4(function (a,
   _v0,
   dist,
   nearby) {
      return function () {
         switch (_v0.ctor)
         {case "_Tuple2":
            return function () {
                 var inRange = A2(List.filter,
                 function (b) {
                    return A2(touching,
                    a,
                    b) && !_U.eq(b,a);
                 },
                 nearby);
                 var len = List.length(inRange);
                 var push = A2(List.foldl,
                 F2(function (_v4,_v5) {
                    return function () {
                       switch (_v5.ctor)
                       {case "_Tuple2":
                          return function () {
                               switch (_v4.ctor)
                               {case "_Tuple2":
                                  return {ctor: "_Tuple2"
                                         ,_0: _v4._0 + _v5._0
                                         ,_1: _v4._1 + _v5._1};}
                               _E.Case($moduleName,
                               "on line 50, column 39 to 54");
                            }();}
                       _E.Case($moduleName,
                       "on line 50, column 39 to 54");
                    }();
                 }),
                 {ctor: "_Tuple2"
                 ,_0: 0
                 ,_1: 0})(A2(List.map,
                 function (b) {
                    return function () {
                       var $ = {ctor: "_Tuple2"
                               ,_0: a.x - b.x
                               ,_1: a.y - b.y},
                       xDif = $._0,
                       yDif = $._1;
                       var wDif = (a.w + b.w) / (2 * a.w) / Basics.toFloat(len + 1);
                       var rDif = a.r + b.r - Basics.sqrt(Math.pow(xDif,
                       2) + Math.pow(yDif,2));
                       var angl = A2(Basics.atan2,
                       yDif,
                       xDif);
                       return {ctor: "_Tuple2"
                              ,_0: Basics.cos(angl) * rDif * wDif
                              ,_1: Basics.sin(angl) * rDif * wDif};
                    }();
                 },
                 inRange));
                 var newXY = function (_v12) {
                    return function () {
                       switch (_v12.ctor)
                       {case "_Tuple2":
                          return _U.cmp(len,
                            6) < 0 ? function () {
                               var rDif = A2(Basics.min,
                               Basics.sqrt(Math.pow(_v0._1 - a.y,
                               2) + Math.pow(_v0._0 - a.x,2)),
                               dist);
                               var angl = A2(Basics.atan2,
                               _v0._1 - a.y,
                               _v0._0 - a.x);
                               return {ctor: "_Tuple2"
                                      ,_0: a.x + _v12._0 + Basics.cos(angl) * rDif
                                      ,_1: a.y + _v12._1 + Basics.sin(angl) * rDif};
                            }() : {ctor: "_Tuple2"
                                  ,_0: a.x + _v12._0
                                  ,_1: a.y + _v12._1};}
                       _E.Case($moduleName,
                       "between lines 58 and 64");
                    }();
                 };
                 var $ = newXY(push),
                 nx = $._0,
                 ny = $._1;
                 return _U.replace([["x",nx]
                                   ,["y",ny]],
                 a);
              }();}
         _E.Case($moduleName,
         "between lines 47 and 66");
      }();
   });
   var zip5 = F5(function (xs1,
   xs2,
   xs3,
   xs4,
   xs5) {
      return function () {
         var _v16 = {ctor: "_Tuple5"
                    ,_0: xs1
                    ,_1: xs2
                    ,_2: xs3
                    ,_3: xs4
                    ,_4: xs5};
         switch (_v16.ctor)
         {case "_Tuple5":
            switch (_v16._0.ctor)
              {case "::":
                 switch (_v16._1.ctor)
                   {case "::":
                      switch (_v16._2.ctor)
                        {case "::":
                           switch (_v16._3.ctor)
                             {case "::":
                                switch (_v16._4.ctor)
                                  {case "::": return {ctor: "::"
                                                     ,_0: {ctor: "_Tuple5"
                                                          ,_0: _v16._0._0
                                                          ,_1: _v16._1._0
                                                          ,_2: _v16._2._0
                                                          ,_3: _v16._3._0
                                                          ,_4: _v16._4._0}
                                                     ,_1: A5(zip5,
                                                     _v16._0._1,
                                                     _v16._1._1,
                                                     _v16._2._1,
                                                     _v16._3._1,
                                                     _v16._4._1)};}
                                  break;}
                             break;}
                        break;}
                   break;}
              break;}
         return _L.fromArray([]);
      }();
   });
   var everyTen = A2(Signal.sampleOn,
   Time.every(8 * Time.second),
   Signal.constant(20));
   var genUnits = A2(Signal._op["<~"],
   List.map(function (_v32) {
      return function () {
         switch (_v32.ctor)
         {case "_Tuple5": return {_: {}
                                 ,r: 16
                                 ,rgba: A4(Color.rgba,
                                 Basics.floor(255 * _v32._2),
                                 Basics.floor(255 * _v32._3),
                                 Basics.floor(255 * _v32._4),
                                 0.8)
                                 ,w: 1
                                 ,x: _v32._0 * 400 - 200
                                 ,y: _v32._1 * 400 - 200};}
         _E.Case($moduleName,
         "between lines 15 and 18");
      }();
   }),
   A2(Signal._op["~"],
   A2(Signal._op["~"],
   A2(Signal._op["~"],
   A2(Signal._op["~"],
   A2(Signal._op["<~"],
   zip5,
   Random.floatList(everyTen)),
   Random.floatList(everyTen)),
   Random.floatList(everyTen)),
   Random.floatList(everyTen)),
   Random.floatList(everyTen)));
   var collideUnits = A3(Signal.foldp,
   F2(function (randUnits,xs) {
      return function () {
         switch (randUnits.ctor)
         {case "[]": return A2(List.map,
              function (a) {
                 return A4(moveXY,
                 a,
                 {ctor: "_Tuple2",_0: 0,_1: 0},
                 1,
                 A2(List.filter,touching(a),xs));
              },
              xs);}
         return A2(List.map,
         function (a) {
            return A4(moveXY,
            a,
            {ctor: "_Tuple2",_0: 0,_1: 0},
            1,
            A2(List.filter,
            touching(a),
            randUnits));
         },
         randUnits);
      }();
   }),
   _L.fromArray([]),
   Signal.merge(A2(Signal.sampleOn,
   Time.every(5 * Time.second),
   genUnits))(A2(Signal.sampleOn,
   Time.fps(30),
   Signal.constant(_L.fromArray([])))));
   var demo = A2(Signal._op["<~"],
   function ($) {
      return Graphics.Element.color(A3(Color.rgb,
      255,
      255,
      255))(A2(Graphics.Collage.collage,
      400,
      400)($));
   },
   A2(Signal._op["<~"],
   List.map(function (a) {
      return Graphics.Collage.move({ctor: "_Tuple2"
                                   ,_0: a.x
                                   ,_1: a.y})(Graphics.Collage.filled(a.rgba)(Graphics.Collage.circle(a.r)));
   }),
   collideUnits));
   var Unit = F5(function (a,
   b,
   c,
   d,
   e) {
      return {_: {}
             ,r: c
             ,rgba: e
             ,w: d
             ,x: a
             ,y: b};
   });
   _elm.Collision.values = {_op: _op
                           ,demo: demo};
   return _elm.Collision.values;
};